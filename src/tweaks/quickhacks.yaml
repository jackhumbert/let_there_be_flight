DeviceAction.FlightAction:
  # $base: DeviceAction.PingDevice
  $type: ObjectAction
  actionName: n"FlightAction" 
  activationTime:
    - QuickHack.QuickHack_inline0
    - QuickHack.QuickHack_inline1
    - QuickHack.QuickHack_inline2
  completionEffects:
    - QuickHack.QuickHack_inline4
    - QuickHack.QuickHack_inline8
    - QuickHack.QuickHack_inline10
    - QuickHack.QuickHack_inline11
  cooldown: t""
  costs: [ DeviceAction.DeviceQuickHack_inline1 ]
  gameplayCategory: ActionCategories.TakeControl
  hackCategory: HackCategories.DeviceHack
  instigatorActivePrereqs: [ ]
  instigatorPrereqs:
    - QuickHack.QuickHack_inline3
  interactionLayer: n"any" 
  # isQuickHack: 
  #   $type: Bool
  #   value: true 
  objectActionType: ObjectActionType.DeviceQuickHack
  objectActionUI:
    action: "Choice1" 
    caption: 367 
    captionIcon: ChoiceCaptionParts.ToggleStateIcon
    description: 6982 
    name: "FlightAction" 
    prereqID: "" 
  priority: 10.0 
  rewards:
    - RPGActionRewards.CombatHacking
  startEffects: 
    - QuickHack.QuickHack_inline12
    - QuickHack.QuickHack_inline13
    - $type: ObjectActionEffect
      effectorToTrigger: t""
      recipient: ObjectActionReference.Target
      statusEffect: BaseStatusEffect.FlightAction
  targetActivePrereqs:
    - Prereqs.ConnectedToBackdoorActive
  targetPrereqs: [ ]

DeviceAction.FlightMalfunction:
  $base: DeviceAction.FlightAction
  actionName: n"FlightMalfunction" 
  costs:
    - $type: StatPoolCost
      costMods:
        - QuickHack.MemoryCostReductionMod
        - QuickHack.TargetResistance
        - QuickHack.ConsumableCostReduction
        - $type: ConstantStatModifier
          modifierType: n"Additive" 
          statType: BaseStats.Memory
          value: 4
      statPool: BaseStatPools.Memory 
    - QuickHack.MemoryIncreaseTier3
  objectActionUI:
    action: "Choice1" 
    caption: 368
    captionIcon: ChoiceCaptionParts.ToggleStateIcon
    description: 6983
    name: "FlightMalfunction" 
    prereqID: "" 
  startEffects: 
    - QuickHack.QuickHack_inline12
    - QuickHack.QuickHack_inline13
    - $type: ObjectActionEffect
      effectorToTrigger: t""
      recipient: ObjectActionReference.Target
      statusEffect: BaseStatusEffect.FlightMalfunction
DeviceAction.FlightMalfunction.isQuickHack: true


DeviceAction.DisableGravity:
  $base: DeviceAction.FlightAction
  actionName: n"DisableGravity" 
  costs: [ DeviceAction.DeviceQuickHack_inline1 ]
  objectActionUI:
    action: "Choice1" 
    caption: 367 
    captionIcon: ChoiceCaptionParts.ToggleStateIcon
    description: 6982 
    name: "DisableGravity" 
    prereqID: "" 
  startEffects: 
    - QuickHack.QuickHack_inline12
    - QuickHack.QuickHack_inline13
    - $type: ObjectActionEffect
      effectorToTrigger: t""
      recipient: ObjectActionReference.Target
      statusEffect: BaseStatusEffect.DisableGravity
DeviceAction.DisableGravity.isQuickHack: true

DeviceAction.Bouncy:
  $base: DeviceAction.FlightAction
  actionName: n"Bouncy" 
  costs: [ DeviceAction.DeviceQuickHack_inline1 ]
  objectActionUI:
    action: "Choice1" 
    caption: 367 
    captionIcon: ChoiceCaptionParts.ToggleStateIcon
    description: 6982 
    name: "Bouncy" 
    prereqID: "" 
  startEffects: 
    - QuickHack.QuickHack_inline12
    - QuickHack.QuickHack_inline13
    - $type: ObjectActionEffect
      effectorToTrigger: t""
      recipient: ObjectActionReference.Target
      statusEffect: BaseStatusEffect.Bouncy
DeviceAction.Bouncy.isQuickHack: true

BaseStatusEffect.FlightAction:
  # $base: BaseStatusEffect.Ping
  $type: StatusEffect
  AIData: BaseStatusEffect.BaseQuickHackStatusEffect_inline0
  SFX:
    - $type: StatusEffectFX
      name: n"quickhack_ping" 
      shouldReapply: false 
  additionalParam: n"None" 
  debugTags: [ ]
  duration: 
    drawBasedOnStatType: false 
    statModifiers: 
      - $type: ConstantStatModifier
        modifierType: n"Additive" 
        statType: BaseStats.MaxDuration
        value: 1
    statModsLimit: -1 
    statModsLimitModifier: t"" 
  gameplayTags:
    - n"Debuff"
    - n"Quickhack"
    - n"Stealth"
  immunityStats: [ ]
  isAffectedByTimeDilationNPC: true 
  isAffectedByTimeDilationPlayer: true 
  maxStacks: 0x1995f8f814 
  packages:
    - $type: GameplayLogicPackage
      UIData: t""
      animationWrapperOverrides: [ ]
      effectors: 
        - $type: Effector
          effectorClassName: n"FlightActionEffector" 
          prereqRecord: Prereqs.AlwaysTruePrereq
          removeAfterActionCall: false 
          statModifierGroups: [ ]
          statPoolUpdates: [ ]
      items: [ ]
      prereq: n"None" 
      stackable: false 
      statPools: [ ]
      stats: [ ]
  playerData: "" 
  removeAllStacksWhenDurationEnds: false 
  removeAllStacksWhenDurationEndsStatModifiers: "" 
  removeOnStoryTier: false 
  replicated: false 
  savable: false 
  statusEffectType: BaseStatusEffectTypes.Misc
  stopActiveSfxOnDeactivate: true 
  uiData: t""

BaseStatusEffect.FlightMalfunction:
  $base: BaseStatusEffect.FlightAction
  # VFX: 
  #   - $type: StatusEffectFX
  #     name: n"explosion"
  #     shouldReapply: true 
  duration: 
    drawBasedOnStatType: false 
    statModifiers: 
      - $type: ConstantStatModifier
        modifierType: n"Additive" 
        statType: BaseStats.MaxDuration
        value: 2
    statModsLimit: -1 
    statModsLimitModifier: t"" 
  packages:
    - $type: GameplayLogicPackage
      UIData: t""
      animationWrapperOverrides: [ ]
      effectors: 
        - $type: Effector
          effectorClassName: n"FlightMalfunctionEffector" 
          prereqRecord: Prereqs.AlwaysTruePrereq
          removeAfterActionCall: false 
          statModifierGroups: [ ]
          statPoolUpdates: [ ]
      items: [ ]
      prereq: n"None" 
      stackable: false 
      statPools: [ ]
      stats: [ ]

BaseStatusEffect.DisableGravity:
  $base: BaseStatusEffect.FlightAction
  packages:
    - $type: GameplayLogicPackage
      UIData: t""
      animationWrapperOverrides: [ ]
      effectors: 
        - $type: Effector
          effectorClassName: n"DisableGravityEffector" 
          prereqRecord: Prereqs.AlwaysTruePrereq
          removeAfterActionCall: false 
          statModifierGroups: [ ]
          statPoolUpdates: [ ]
      items: [ ]
      prereq: n"None" 
      stackable: false 
      statPools: [ ]
      stats: [ ]

BaseStatusEffect.Bouncy:
  $base: BaseStatusEffect.FlightAction
  packages:
    - $type: GameplayLogicPackage
      UIData: t""
      animationWrapperOverrides: [ ]
      effectors: 
        - $type: Effector
          effectorClassName: n"BouncyEffector" 
          prereqRecord: Prereqs.AlwaysTruePrereq
          removeAfterActionCall: false 
          statModifierGroups: [ ]
          statPoolUpdates: [ ]
      items: [ ]
      prereq: n"None" 
      stackable: false 
      statPools: [ ]
      stats: [ ]