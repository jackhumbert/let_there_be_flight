player.vehicle
{
	bool canEnterVehicleFlight = true;
}

playerStateMachineInputContext.vehicleFlightContext
{
	CName affinity = "None";
	CName[] alias = 
	[
		"allVehicleContexts"
	];
	CName forceInputContext = "VehicleFlight";
	bool hasEnterCondition = true;
	bool hasExitCondition = false;
	bool hasOnEnter = true;
	bool hasOnExit = true;
	bool hasOnUpdate = true;
	string stateBodyClassName = "";
	string[] transitionCondition = 
	[
		"", "", "ExitCondition"
	];
	bool[] transitionConditionOverridesEnterCondition = [];
	bool[] transitionSkipInternalCondition = [];
	string[] transitionTo = 
	[
		"allForcedContexts", "allUIContexts", "gameplayContext"
	];
}

playerStateMachineDefinitions.InputContext {
  states += [ "vehicleFlightContext" ];
}

playerStateMachineVehicle.drive {
  transitionTo += [ "flight" ];
  transitionCondition += [ "ToFlight" ];
}

playerStateMachineVehicle.driverCombat {
  transitionTo += [ "flight" ];
  transitionCondition += [ "ToFlight" ];
}

playerStateMachineVehicle.scene {
  transitionTo += [ "flight" ];
  transitionCondition += [ "ToFlight" ];
}

photo_mode.general {
  onlyFPPPhotoModeInPlayerStates += [ "Vehicle:flight" ];
}

// playerStateMachineVehicle.flight : playerStateMachineVehicle.drive
// {
// 	CName forceInputContext = "VehicleFlight";
// 	string stateBodyClassName = "";
// 	string[] transitionTo = 
// 	[
// 		"scene", "drive", "deathExiting", "collisionExiting", "exiting"
// 	];
// 	string[] transitionCondition = 
// 	[
// 		"", "=", "", "", ""
// 	];
// }

playerStateMachineVehicle.flight
{
	CName affinity = "None";
	CName[] alias = 
	[
		"allSlotStates"
	];
	CName forceInputContext = "VehicleFlight";
	bool hasEnterCondition = true;
	bool hasExitCondition = false;
	bool hasOnEnter = true;
	bool hasOnExit = true;
	bool hasOnUpdate = true;
	CName onEnterCameraParamsName = "Vehicle";
	CName onEnterCameraParamsNameSecondary = "Bike";
	string stateBodyClassName = "";
	string[] transitionCondition = 
	[
		"", "=", "", "", ""
	];
	bool[] transitionConditionOverridesEnterCondition = [];
	bool[] transitionSkipInternalCondition = [];
	string[] transitionTo = 
	[
		"scene", "drive", "deathExiting", "collisionExiting", "exiting"
	];
}

playerStateMachineDefinitions.Vehicle
{
  states += [ "flight"];
}