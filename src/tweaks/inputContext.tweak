// playerStateMachineInputContext need *Decisions class

playerStateMachineInputContext.vehicleFlightContext
{
	CName affinity = "None";
	CName[] alias = 
	[
		"allVehicleContexts"
	];
	CName forceInputContext = "VehicleFlight";
	bool hasEnterCondition = true;
	bool hasExitCondition = false;
	bool hasOnEnter = true;
	bool hasOnExit = true;
	bool hasOnUpdate = true;
	string stateBodyClassName = "";
	bool[] transitionConditionOverridesEnterCondition = [];
	bool[] transitionSkipInternalCondition = [];
	string[] transitionTo = 
	[
		"vehicleDriverContext", "vehicleFlightDriverCombatTPPContext", "vehicleDriverCombatMountedWeaponsContext", "allForcedContexts", "allUIContexts", "gameplayContext"
	];
	string[] transitionCondition = 
	[
		"=", "=", "=", "", "", "ExitCondition"
	];
}

playerStateMachineInputContext.vehicleDriverContext {
  transitionTo += [ "vehicleFlightContext" ];
  transitionCondition += [ "=" ];
}

playerStateMachineInputContext.vehicleFlightDriverCombatContext : playerStateMachineInputContext.vehicleFlightContext
{	
	CName affinity = "None";
	CName[] alias = 
	[
		"allVehicleContexts"
	];
	bool hasEnterCondition = true;
	bool hasExitCondition = false;
	bool hasOnEnter = true;
	bool hasOnExit = true;
	bool hasOnUpdate = true;
	CName forceInputContext = "VehicleFlightDriverCombat";
	bool forceInputContextDirectBlend = true;
	string[] transitionTo = 
	[
		"allForcedContexts", "allUIContexts", "vehicleFlightDriverCombatTPPContext", "vehicleFlightDriverCombatAimContext", "gameplayContext"
	];
	string[] transitionCondition = 
	[
		"", "", "", "", "ExitCondition"
	];
}

playerStateMachineInputContext.vehicleFlightDriverCombatTPPContext
{	
	CName affinity = "None";
	CName[] alias = 
	[
		"allVehicleContexts"
	];
	bool hasEnterCondition = true;
	bool hasExitCondition = false;
	bool hasOnEnter = true;
	bool hasOnExit = true;
	bool hasOnUpdate = true;
	CName forceInputContext = "VehicleFlightDriverCombatTPP";
	bool forceInputContextDirectBlend = true;
	string[] transitionTo = 
	[
		"allForcedContexts", "allUIContexts", "vehicleFlightContext", "vehicleFlightDriverCombatContext", "vehicleFlightDriverCombatAimContext", "vehicleDriverCombatTPPContext", "gameplayContext"
	];
	string[] transitionCondition = 
	[
		"", "", "=", "", "=", "=", "ExitCondition"
	];
}

playerStateMachineInputContext.vehicleDriverCombatTPPContext {
  transitionTo += [ "vehicleFlightDriverCombatTPPContext" ];
  transitionCondition += [ "=" ];
}

playerStateMachineInputContext.vehicleFlightDriverCombatAimContext
{
	CName affinity = "None";
	CName[] alias = 
	[
		"allVehicleContexts"
	];
	bool hasEnterCondition = true;
	bool hasExitCondition = false;
	bool hasOnEnter = true;
	bool hasOnExit = true;
	bool hasOnUpdate = true;
	CName forceInputContext = "VehicleFlightDriverCombatAim";
	bool forceInputContextDirectBlend = true;
	string[] transitionTo = 
	[
		"allForcedContexts", "allUIContexts", "vehicleFlightDriverCombatContext", "vehicleFlightDriverCombatTPPContext", "vehicleDriverCombatAimContext", "gameplayContext"
	];
	string[] transitionCondition = 
	[
		"", "", "", "=", "=", "ExitCondition"
	];
}

playerStateMachineInputContext.vehicleDriverCombatAimContext {
  transitionTo += [ "vehicleFlightDriverCombatAimContext" ];
  transitionCondition += [ "=" ];
}

playerStateMachineInputContext.vehicleFlightDriverCombatMountedWeaponsContext
{
	CName affinity = "None";
	CName[] alias = 
	[
		"allVehicleContexts"
	];
	bool hasEnterCondition = true;
	bool hasExitCondition = false;
	bool hasOnEnter = true;
	bool hasOnExit = true;
	bool hasOnUpdate = true;
	CName forceInputContext = "VehicleFlightDriverCombatMountedWeapons";
	string[] transitionTo = 
	[
		"allForcedContexts", "allUIContexts", "vehicleFlighContext", "vehicleFlightDriverCombatContext", "vehicleDriverCombatMountedWeaponsContext", "gameplayContext"
	];
	string[] transitionCondition = 
	[
		"", "", "=", "", "=", "ExitCondition"
	];
}

playerStateMachineInputContext.vehicleDriverCombatMountedWeaponsContext {
  transitionTo += [ "vehicleFlightDriverCombatMountedWeaponsContext" ];
  transitionCondition += [ "=" ];
}

playerStateMachineDefinitions.InputContext {
  states += [ "vehicleFlightContext", "vehicleFlightDriverCombatContext", "vehicleFlightDriverCombatTPPContext", "vehicleFlightDriverCombatAimContext", "vehicleFlightDriverCombatMountedWeaponsContext" ];
}
