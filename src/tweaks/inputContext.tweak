playerStateMachineDefinitions.InputContext {
  states += [ "vehicleFlightContext", "vehicleFlightCombatContext", "vehicleFlightDriverMountedWeaponsContext", "vehicleFlightDriverCombatContext", "vehicleFlightDriverCombatTPPContext", "vehicleFlightDriverCombatAimContext", "vehicleFlightDriverCombatMountedWeaponsContext" ];
}

// additional properties {
// string scriptedDecisionsClassName = "VehicleFlightContextDecisions";
// string scriptedEventsClassName = "VehicleFlightContextEvents";
// bool hasInternalEnterCondition = false;
// bool hasOnTick = true;
// float tickRate = 0.2;
// bool continueTransitioning_EXPERIMENTAL = false;
// bool hotSwapOnRemove = false;
// }

playerStateMachineInputContext.vehicleFlightContext
{	
	string stateBodyClassName = ""; // type of gamestateMachineplayeractions___
	bool hasEnterCondition = true;
	bool hasOnEnter = true;
	bool hasExitCondition = false;
	bool hasOnExit = true;
	bool hasOnUpdate = true;
	CName affinity = "None";

	CName forceInputContext = "VehicleFlight";
	CName[] alias = 
	[
		"allVehicleContexts"
	];
	bool[] transitionConditionOverridesEnterCondition = [];
	bool[] transitionSkipInternalCondition = [];
	string[] transitionTo = 
	[
		"allForcedContexts", "allUIContexts", "gameplayContext"
	];
	string[] transitionCondition = 
	[
		"", "", "ExitCondition"
	];
	bool forceInputContextDirectBlend = false;
}

playerStateMachineInputContext.vehicleFlightCombatContext
{	
	string stateBodyClassName = ""; // type of gamestateMachineplayeractions___
	bool hasEnterCondition = true;
	bool hasOnEnter = true;
	bool hasExitCondition = false;
	bool hasOnExit = true;
	bool hasOnUpdate = true;
	CName affinity = "None";

	CName forceInputContext = "VehicleFlightCombat";
	CName[] alias = 
	[
		"allVehicleContexts"
	];
	bool[] transitionConditionOverridesEnterCondition = [];
	bool[] transitionSkipInternalCondition = [];
	string[] transitionTo = 
	[
		"allForcedContexts", "allUIContexts", "gameplayContext"
	];
	string[] transitionCondition = 
	[
		"", "", "ExitCondition"
	];
	bool forceInputContextDirectBlend = false;
}

playerStateMachineInputContext.vehicleFlightDriverMountedWeaponsContext
{
	string stateBodyClassName = ""; // type of gamestateMachineplayeractions___
	bool hasEnterCondition = true;
	bool hasOnEnter = true;
	bool hasExitCondition = false;
	bool hasOnExit = true;
	bool hasOnUpdate = true;
	CName affinity = "None";

	CName[] alias = 
	[
		"allVehicleContexts"
	];
	bool[] transitionConditionOverridesEnterCondition = [];
	bool[] transitionSkipInternalCondition = [];
	string[] transitionTo = 
	[
		"allForcedContexts", "allUIContexts", "gameplayContext"
	];
	string[] transitionCondition = 
	[
		"", "", "ExitCondition"
	];
	bool forceInputContextDirectBlend = false;


	CName forceInputContext = "VehicleFlightDriverMountedWeapons";
}

playerStateMachineInputContext.vehicleFlightDriverCombatContext
{	
	string stateBodyClassName = ""; // type of gamestateMachineplayeractions___
	bool hasEnterCondition = true;
	bool hasOnEnter = true;
	bool hasExitCondition = false;
	bool hasOnExit = true;
	bool hasOnUpdate = true;
	CName affinity = "None";

	CName[] alias = 
	[
		"allVehicleContexts"
	];
	bool[] transitionConditionOverridesEnterCondition = [];
	bool[] transitionSkipInternalCondition = [];


	CName forceInputContext = "VehicleFlightDriverCombat";
	bool forceInputContextDirectBlend = true;
	string[] transitionTo = 
	[
		"allForcedContexts", "allUIContexts", "vehicleFlightDriverCombatTPPContext", "vehicleFlightDriverCombatAimContext", "gameplayContext"
	];
	string[] transitionCondition = 
	[
		"", "", "", "", "ExitCondition"
	];
}

playerStateMachineInputContext.vehicleFlightDriverCombatTPPContext
{	
	string stateBodyClassName = ""; // type of gamestateMachineplayeractions___
	bool hasEnterCondition = true;
	bool hasOnEnter = true;
	bool hasExitCondition = false;
	bool hasOnExit = true;
	bool hasOnUpdate = true;
	CName affinity = "None";

	CName[] alias = 
	[
		"allVehicleContexts"
	];
	bool[] transitionConditionOverridesEnterCondition = [];
	bool[] transitionSkipInternalCondition = [];
	bool forceInputContextDirectBlend = true;


	CName forceInputContext = "VehicleFlightDriverCombatTPP";
	string[] transitionTo = 
	[
		"allForcedContexts", "allUIContexts", "vehicleFlightDriverCombatContext", "vehicleFlightDriverCombatAimContext", "gameplayContext"
	];
	string[] transitionCondition = 
	[
		"", "", "", "", "ExitCondition"
	];
}

playerStateMachineInputContext.vehicleFlightDriverCombatAimContext
{
	string stateBodyClassName = ""; // type of gamestateMachineplayeractions___
	bool hasEnterCondition = true;
	bool hasOnEnter = true;
	bool hasExitCondition = false;
	bool hasOnExit = true;
	bool hasOnUpdate = true;
	CName affinity = "None";

	CName[] alias = 
	[
		"allVehicleContexts"
	];
	bool[] transitionConditionOverridesEnterCondition = [];
	bool[] transitionSkipInternalCondition = [];


	CName forceInputContext = "VehicleFlightDriverCombatAim";
	bool forceInputContextDirectBlend = true;
	string[] transitionTo = 
	[
		"allForcedContexts", "allUIContexts", "vehicleFlightDriverCombatContext", "vehicleFlightDriverCombatTPPContext", "gameplayContext"
	];
	string[] transitionCondition = 
	[
		"", "", "", "", "ExitCondition"
	];
}

playerStateMachineInputContext.vehicleFlightDriverCombatMountedWeaponsContext
{
	string stateBodyClassName = ""; // type of gamestateMachineplayeractions___
	bool hasEnterCondition = true;
	bool hasOnEnter = true;
	bool hasExitCondition = false;
	bool hasOnExit = true;
	bool hasOnUpdate = true;
	CName affinity = "None";

	CName[] alias = 
	[
		"allVehicleContexts"
	];
	bool[] transitionConditionOverridesEnterCondition = [];
	bool[] transitionSkipInternalCondition = [];
	string[] transitionTo = 
	[
		"allForcedContexts", "allUIContexts", "gameplayContext"
	];
	string[] transitionCondition = 
	[
		"", "", "ExitCondition"
	];
	bool forceInputContextDirectBlend = false;


	CName forceInputContext = "VehicleFlightDriverCombatMountedWeapons";
}
