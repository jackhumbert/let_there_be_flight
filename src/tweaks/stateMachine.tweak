
playerStateMachineVehicle.drive {
  transitionTo += [ "flight" ];
  transitionCondition += [ "=" ];
}

playerStateMachineVehicle.driverCombat {
  transitionTo += [ "flightDriverCombat" ];
  transitionCondition += [ "" ];
}

playerStateMachineVehicle.driverCombatFirearms {
  transitionTo += [ "flightDriverCombatFirearms" ];
  transitionCondition += [ "=" ];
}

playerStateMachineVehicle.driverCombatMountedWeapons {
  transitionTo += [ "flightDriverCombatMountedWeapons" ];
  transitionCondition += [ "=" ];
}

playerStateMachineVehicle.scene {
  transitionTo += [ "flightDriveCombatFirearms", "flightDriverCombatMountedWeapons" ];
  transitionCondition += [ "", "" ];
}

photo_mode.general {
  onlyFPPPhotoModeInPlayerStates += [ "Vehicle:flight" ];
}

// playerStateMachineVehicle items need Decisions & Events classes

playerStateMachineVehicle.flight : playerStateMachineVehicle.drive
{
	CName affinity = "None";
	CName[] alias = 
	[
		"allSlotStates"
	];
	bool hasEnterCondition = true;
	bool hasExitCondition = false;
	bool hasOnEnter = true;
	bool hasOnExit = true;
	bool hasOnUpdate = true;
	CName onEnterCameraParamsName = "Vehicle";
	CName onEnterCameraParamsNameSecondary = "Bike";
	string stateBodyClassName = "VehicleDrive";
	string[] transitionCondition = 
	[
		"", "=", "=", "=", "", "", "", "", "", "", ""
	];
	bool[] transitionConditionOverridesEnterCondition = [];
	bool[] transitionSkipInternalCondition = [];
	string[] transitionTo = 
	[
		"scene", "drive", "flightDriverCombatFirearms", "flightDriverCombatMountedWeapons", "deathExiting", "collisionExiting", "coolExiting", "slideExiting", "speedExiting", "combatExiting", "exiting"
	];
}

playerStateMachineVehicle.flightDriverCombat : playerStateMachineVehicle.drive
{
	float wheelieMinCenterOfMassOffset = 0.25f;
	float wheelieMinPitch = 30.0f;

	CName affinity = "None";
	CName[] alias = 
	[
		"allSlotStates"
	];
	bool hasEnterCondition = false;
	bool hasExitCondition = false;
	bool hasOnEnter = true;
	bool hasOnExit = true;
	bool hasOnUpdate = true;
	CName onEnterCameraParamsName = "DriverCombat";
	CName onEnterCameraParamsNameSecondary = "Bike";
	string stateBodyClassName = "";
	bool[] transitionConditionOverridesEnterCondition = [];
	bool[] transitionSkipInternalCondition = [];
	string[] transitionCondition = 
	[
		"=", "=", "", "", "", "", "", "", ""
	];
	string[] transitionTo = 
	[
		"flight", "driverCombat", "deathExiting", "collisionExiting", "coolExiting", "slideExiting", "speedExiting", "combatExiting", "exiting"
	];
}

playerStateMachineVehicle.flightDriverCombatFirearms : playerStateMachineVehicle.drive
{
	float wheelieMinCenterOfMassOffset = 0.25f;
	float wheelieMinPitch = 30.0f;

	CName affinity = "None";
	CName[] alias = 
	[
		"allSlotStates"
	];
	bool hasEnterCondition = true;
	bool hasExitCondition = false;
	bool hasOnEnter = true;
	bool hasOnExit = true;
	bool hasOnUpdate = true;
	CName onEnterCameraParamsName = "DriverCombat";
	CName onEnterCameraParamsNameSecondary = "Bike";
	string stateBodyClassName = "";
	bool[] transitionConditionOverridesEnterCondition = [];
	bool[] transitionSkipInternalCondition = [];
	string[] transitionCondition = 
	[
		"=", "=", "", "", "", "", "", "", ""
	];
	string[] transitionTo = 
	[
		"flight", "driverCombatFirearms", "deathExiting", "collisionExiting", "coolExiting", "slideExiting", "speedExiting", "combatExiting", "exiting"
	];
}

playerStateMachineVehicle.flightDriverCombatMountedWeapons : playerStateMachineVehicle.drive
{
	float wheelieMinCenterOfMassOffset = 0.25f;
	float wheelieMinPitch = 30.0f;

	CName affinity = "None";
	CName[] alias = 
	[
		"allSlotStates"
	];
	bool hasEnterCondition = true;
	bool hasExitCondition = false;
	bool hasOnEnter = true;
	bool hasOnExit = true;
	bool hasOnUpdate = true;
	CName onEnterCameraParamsName = "DriverCombat";
	CName onEnterCameraParamsNameSecondary = "Bike";
	string stateBodyClassName = "";
	bool[] transitionConditionOverridesEnterCondition = [];
	bool[] transitionSkipInternalCondition = [];
	string[] transitionCondition = 
	[
		"=", "=", "", "", "", "", "", "", ""
	];
	string[] transitionTo = 
	[
		"flight", "driverCombatMountedWeapons", "deathExiting", "collisionExiting", "coolExiting", "slideExiting", "speedExiting", "combatExiting", "exiting"
	];
}

playerStateMachineDefinitions.Vehicle
{
  states += [ "flight", "flightDriverCombat", "flightDriverCombatFirearms", "flightDriverCombatMountedWeapons"];
}