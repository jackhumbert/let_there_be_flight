playerStateMachine {
	stateMachineListDefinitions += [ "playerStateMachineDefinitions.VehicleFlight" ];
	stateMachineList_prePhysics += [ "VehicleFlight" ];
}

playerStateMachine.VehicleFlight {
	string typeName = "VehicleFlight";
	string definitionName = "VehicleFlight";
	// bool default = true;
}

playerStateMachineDefinitions.VehicleFlight
{
	CName stateMachineBodyName = "gamestateMachineStateMachineBody";
	string name = "VehicleFlight";
	string packageName = "playerStateMachineVehicleFlight";
	string[] states = 
	[
		"vehicleFlightDisabled", "vehicleFlightEnabled", "vehicleFlightActivating", "vehicleFlightActive", "vehicleFlightDeactivating"
	];
	string startingState = "vehicleFlightDisabled";
	string type = "VehicleFlight";
	// CName initDataClass = "VehicleFlightInitData";
	// bool blockReset = true;
	// CName animGraphName = "vehicle";
	// CName animGraphSlot = "vehicle";
}

playerStateMachineVehicleFlight.vehicleFlightDisabled
{
	// string stateBodyClassName = "gamestateMachineStateActionDefinition";
	CName affinity = "None";
	CName[] alias = [];
	bool hasEnterCondition = true;
	bool hasOnEnter = true;
	bool hasOnExit = false;
	bool hasOnUpdate = false;
	string[] transitionCondition = [ "=" ];
	string[] transitionTo = [ "vehicleFlightEnabled" ];
	// CName onEnterCameraParamsName = "Vehicle";
	// CName onEnterCameraParamsNameSecondary = "Bike";
}

playerStateMachineVehicleFlight.vehicleFlightEnabled
{
	CName affinity = "None";
	CName[] alias = [];
	bool hasOnEnter = true;
	bool hasOnExit = false;
	bool hasOnUpdate = false;
	string[] transitionCondition = [ "", "=", "="	];
	string[] transitionTo = [ "vehicleFlightDisabled", "vehicleFlightActivating", "vehicleFlightActive"	];
}

playerStateMachineVehicleFlight.vehicleFlightActivating
{
	CName affinity = "None";
	CName[] alias = [];
	bool hasOnEnter = true;
	bool hasOnExit = false;
	bool hasOnUpdate = false;
	string[] transitionCondition = [ ""	];
	string[] transitionTo = [ "vehicleFlightActive"	];
}

playerStateMachineVehicleFlight.vehicleFlightActive
{
	CName affinity = "None";
	CName[] alias = [];
	bool hasOnEnter = true;
	bool hasOnExit = true;
	bool hasOnUpdate = false;
	string[] transitionCondition = [ "=", "="	];
	string[] transitionTo = [ "vehicleFlightDeactivating", "vehicleFlightDisabled"	];
}

playerStateMachineVehicleFlight.vehicleFlightDeactivating
{
	CName affinity = "None";
	CName[] alias = [];
	bool hasOnEnter = true;
	bool hasOnExit = false;
	bool hasOnUpdate = false;
	string[] transitionCondition = [ ""	];
	string[] transitionTo = [ "vehicleFlightEnabled"	];
}

// photo_mode.general {
//   onlyFPPPhotoModeInPlayerStates += [ "Vehicle:flight" ];
// }